/*
 * Copyright (C) 2012 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * V2.0
 */
#ifndef _SENSOR_OV8858_MIPI_RAW_H_
#define _SENSOR_OV8858_MIPI_RAW_H_

#include <utils/Log.h>
#include "sensor.h"
#include "jpeg_exif_header.h"
#include "sensor_drv_u.h"
#include "sensor_raw.h"

#ifdef SBS_MODE_SENSOR
#include "sensor_sbs.h"
#endif

#ifdef SBS_SENSOR_FRONT
#include "parameters_front_cmk/sensor_ov8858_raw_param_main.c"
#include "parameters_front_darling/sensor_ov8858_darling_raw_param_main.c"
#else
#include "parameters_back_cmk/sensor_ov8858_raw_param_main.c"
#include "parameters_back_darling/sensor_ov8858_darling_raw_param_main.c"
#endif

#define SENSOR_NAME "ov8858_mipi_raw"
#if 0                       // defined(CONFIG_DUAL_MODULE)
#define I2C_SLAVE_ADDR 0x20 /* 16bit slave address*/
#else
#define I2C_SLAVE_ADDR 0x6c /* 16bit slave address*/
#endif

#define VENDOR_NUM 1
#define BINNING_FACTOR 1
#define ov8858_PID_ADDR 0x300B
#define ov8858_PID_VALUE 0x88
#define ov8858_VER_ADDR 0x300C
#define ov8858_VER_VALUE 0x58

/* sensor parameters begin */
/* effective sensor output image size */
#define SNAPSHOT_WIDTH 3264  // 4224  // 5344
#define SNAPSHOT_HEIGHT 2448 // 3136 // 4016
#define PREVIEW_WIDTH 1632   // 2112   // 2672
#define PREVIEW_HEIGHT 1224  // 1568
/*Raw Trim parameters*/
#define SNAPSHOT_TRIM_X 0
#define SNAPSHOT_TRIM_Y 0
#define SNAPSHOT_TRIM_W 3264
#define SNAPSHOT_TRIM_H 2448
#define PREVIEW_TRIM_X 0
#define PREVIEW_TRIM_Y 0
#define PREVIEW_TRIM_W 1632
#define PREVIEW_TRIM_H 1224

/* frame length*/

#define SNAPSHOT_FRAME_LENGTH 2474 // 3214
#define PREVIEW_FRAME_LENGTH 2474  // 3216
/*line time unit: 0.001us*/
#define SNAPSHOT_LINE_TIME 13474
#define PREVIEW_LINE_TIME 13474

/*Mipi output*/
#define LANE_NUM 4
#define RAW_BITS 10

#define SNAPSHOT_MIPI_PER_LANE_BPS 720 // 1080
#define PREVIEW_MIPI_PER_LANE_BPS 720  // 540

/* please ref your spec */
#define FRAME_OFFSET 4 // 8 // 16 // 32
#define SENSOR_MAX_GAIN 0x7ff
#define SENSOR_BASE_GAIN 0x80
#define SENSOR_MIN_SHUTTER 4

/* isp parameters, please don't change it*/
#if defined(CONFIG_CAMERA_ISP_VERSION_V3) ||                                   \
    defined(CONFIG_CAMERA_ISP_VERSION_V4)
#define ISP_BASE_GAIN 0x80
#else
#define ISP_BASE_GAIN 0x10
#endif

/* please don't change it */
#define EX_MCLK 24
#define IMAGE_NORMAL_MIRROR

/*==============================================================================
 * Description:
 * global variable
 *============================================================================*/
// static struct hdr_info_t s_hdr_info;
// static uint32_t s_current_default_frame_length;
// struct sensor_ev_info_t s_sensor_ev_info;

static const SENSOR_REG_T ov8858_init_setting2[] = {};
static const SENSOR_REG_T ov8858_init_setting[] = {
    {0x0103, 0x01}, {0x0100, 0x00}, //
    {0x0302, 0x1e},                 //
    {0x0303, 0x00},                 //
    {0x0304, 0x03},                 //
    {0x030d, 0x1e},                 //
    {0x030e, 0x00},                 //
    {0x030f, 0x04},                 //
    {0x0312, 0x01},                 //
    {0x031e, 0x0c},                 //
    {0x3600, 0x00},                 //
    {0x3601, 0x00},                 //
    {0x3602, 0x00},                 //
    {0x3603, 0x00},                 //
    {0x3604, 0x22},                 //
    {0x3605, 0x20},                 //
    {0x3606, 0x00},                 //
    {0x3607, 0x20},                 //
    {0x3608, 0x11},                 //
    {0x3609, 0x28},                 //
    {0x360a, 0x00},                 //
    {0x360b, 0x05},                 //
    {0x360c, 0xd4},                 //
    {0x360d, 0x40},                 //
    {0x360e, 0x0c},                 //
    {0x360f, 0x20},                 //
    {0x3610, 0x07},                 //
    {0x3611, 0x20},                 //
    {0x3612, 0x88},                 //
    {0x3613, 0x80},                 //
    {0x3614, 0x58},                 //
    {0x3615, 0x00},                 //
    {0x3616, 0x4a},                 //
    {0x3617, 0x40},                 //
    {0x3618, 0x5a},                 //
    {0x3619, 0x70},                 //
    {0x361a, 0x99},                 //
    {0x361b, 0x0a},                 //
    {0x361c, 0x07},                 //
    {0x361d, 0x00},                 //
    {0x361e, 0x00},                 //
    {0x361f, 0x00},                 //
    {0x3638, 0xff},                 //
    {0x3633, 0x0f},                 //
    {0x3634, 0x0f},                 //
    {0x3635, 0x0f},                 //
    {0x3636, 0x12},                 //
    {0x3645, 0x13},                 //
    {0x3646, 0x83},                 //
    {0x364a, 0x07},                 //
    {0x3015, 0x01},                 //
    {0x3018, 0x72},                 //
    {0x3020, 0x93},                 //
    {0x3022, 0x01},                 //
    {0x3031, 0x0a},                 //
    {0x3034, 0x00},                 //
    {0x3106, 0x01},                 //
    {0x3305, 0xf1},                 //
    {0x3308, 0x00},                 //
    {0x3309, 0x28},                 //
    {0x330a, 0x00},                 //
    {0x330b, 0x20},                 //
    {0x330c, 0x00},                 //
    {0x330d, 0x00},                 //
    {0x330e, 0x00},                 //
    {0x330f, 0x40},                 //
    {0x3307, 0x04},                 //
    {0x3500, 0x00},                 //
    {0x3501, 0x4d},                 //
    {0x3502, 0x40},                 //
    {0x3503, 0x80},                 //
    {0x3505, 0x80},                 //
    {0x3508, 0x04},                 //
    {0x3509, 0x00},                 //
    {0x350c, 0x00},                 //
    {0x350d, 0x80},                 //
    {0x3510, 0x00},                 //
    {0x3511, 0x02},                 //
    {0x3512, 0x00},                 //
    {0x3700, 0x30},                 //
    {0x3701, 0x18},                 //
    {0x3702, 0x50},                 //
    {0x3703, 0x32},                 //
    {0x3704, 0x28},                 //
    {0x3705, 0x00},                 //
    {0x3706, 0x82},                 //
    {0x3707, 0x08},                 //
    {0x3708, 0x48},                 //
    {0x3709, 0x66},                 //
    {0x370a, 0x01},                 //
    {0x370b, 0x82},                 //
    {0x370c, 0x07},                 //
    {0x3718, 0x14},                 //
    {0x3719, 0x31},                 //
    {0x3712, 0x44},                 //
    {0x3714, 0x24},                 //
    {0x371e, 0x31},                 //
    {0x371f, 0x7f},                 //
    {0x3720, 0x0a},                 //
    {0x3721, 0x0a},                 //
    {0x3724, 0x0c},                 //
    {0x3725, 0x02},                 //
    {0x3726, 0x0c},                 //
    {0x3728, 0x0a},                 //
    {0x3729, 0x03},                 //
    {0x372a, 0x06},                 //
    {0x372b, 0xa6},                 //
    {0x372c, 0xa6},                 //
    {0x372d, 0xa6},                 //
    {0x372e, 0x0c},                 //
    {0x372f, 0x20},                 //
    {0x3730, 0x02},                 //
    {0x3731, 0x0c},                 //
    {0x3732, 0x28},                 //
    {0x3733, 0x10},                 //
    {0x3734, 0x40},                 //
    {0x3736, 0x30},                 //
    {0x373a, 0x0a},                 //
    {0x373b, 0x0b},                 //
    {0x373c, 0x14},                 //
    {0x373e, 0x06},                 //
    {0x3750, 0x0a},                 //
    {0x3751, 0x0e},                 //
    {0x3755, 0x10},                 //
    {0x3758, 0x00},                 //
    {0x3759, 0x4c},                 //
    {0x375a, 0x0c},                 //
    {0x375b, 0x26},                 //
    {0x375c, 0x20},                 //
    {0x375d, 0x04},                 //
    {0x375e, 0x00},                 //
    {0x375f, 0x28},                 //
    {0x3768, 0x22},                 //
    {0x3769, 0x44},                 //
    {0x376a, 0x44},                 //
    {0x3761, 0x00},                 //
    {0x3762, 0x00},                 //
    {0x3763, 0x00},                 //
    {0x3766, 0xff},                 //
    {0x376b, 0x00},                 //
    {0x3772, 0x46},                 //
    {0x3773, 0x04},                 //
    {0x3774, 0x2c},                 //
    {0x3775, 0x13},                 //
    {0x3776, 0x08},                 //
    {0x3777, 0x00},                 //
    {0x3778, 0x17},                 //
    {0x37a0, 0x88},                 //
    {0x37a1, 0x7a},                 //
    {0x37a2, 0x7a},                 //
    {0x37a3, 0x00},                 //
    {0x37a4, 0x00},                 //
    {0x37a5, 0x00},                 //
    {0x37a6, 0x00},                 //
    {0x37a7, 0x88},                 //
    {0x37a8, 0x98},                 //
    {0x37a9, 0x98},                 //
    {0x3760, 0x00},                 //
    {0x376f, 0x01},                 //
    {0x37aa, 0x88},                 //
    {0x37ab, 0x5c},                 //
    {0x37ac, 0x5c},                 //
    {0x37ad, 0x55},                 //
    {0x37ae, 0x19},                 //
    {0x37af, 0x19},                 //
    {0x37b0, 0x00},                 //
    {0x37b1, 0x00},                 //
    {0x37b2, 0x00},                 //
    {0x37b3, 0x84},                 //
    {0x37b4, 0x84},                 //
    {0x37b5, 0x60},                 //
    {0x37b6, 0x00},                 //
    {0x37b7, 0x00},                 //
    {0x37b8, 0x00},                 //
    {0x37b9, 0xff},                 //
    {0x3800, 0x00},                 //
    {0x3801, 0x0c},                 //
    {0x3802, 0x00},                 //
    {0x3803, 0x0c},                 //
    {0x3804, 0x0c},                 //
    {0x3805, 0xd3},                 //
    {0x3806, 0x09},                 //
    {0x3807, 0xa3},                 //
    {0x3808, 0x06},                 //
    {0x3809, 0x60},                 //
    {0x380a, 0x04},                 //
    {0x380b, 0xc8},                 //
    {0x380c, 0x07},                 //
    {0x380d, 0x88},                 //
    {0x380e, 0x04},                 //
    {0x380f, 0xdc},                 //
    {0x3810, 0x00},                 //
    {0x3811, 0x04},                 //
    {0x3813, 0x02},                 //
    {0x3814, 0x03},                 //
    {0x3815, 0x01},                 //
#ifdef CAMERA_IMAGE_180
    {0x3820, 0x06}, //
    {0x3821, 0x61}, //
#else
    {0x3820, 0x00}, //
    {0x3821, 0x67}, //
#endif
    {0x382a, 0x03}, //
    {0x382b, 0x01}, //
    {0x3830, 0x08}, //
    {0x3836, 0x02}, //
    {0x3837, 0x18}, //
    {0x3841, 0xff}, //
    {0x3846, 0x48}, //
    {0x3d85, 0x16}, //
    {0x3d8c, 0x73}, //
    {0x3d8d, 0xde}, //
    {0x3f08, 0x10}, //
    {0x3f0a, 0x00}, //
    {0x4000, 0xf5}, //
    {0x4001, 0x10}, //
    {0x4005, 0x10}, //
    {0x4002, 0x27}, //
    {0x4009, 0x81}, //
    {0x400b, 0x0c}, //
    {0x4011, 0x20}, //
    {0x401b, 0x00}, //
    {0x401d, 0x00}, //
    {0x4020, 0x00}, //
    {0x4021, 0x04}, //
    {0x4022, 0x06}, //
    {0x4023, 0x00}, //
    {0x4024, 0x0f}, //
    {0x4025, 0x2a}, //
    {0x4026, 0x0f}, //
    {0x4027, 0x2b}, //
    {0x4028, 0x00}, //
    {0x4029, 0x02}, //
    {0x402a, 0x04}, //
    {0x402b, 0x04}, //
    {0x402c, 0x00}, //
    {0x402d, 0x02}, //
    {0x402e, 0x04}, //
    {0x402f, 0x04}, //
    {0x401f, 0x00}, //
    {0x4034, 0x3f}, //
    {0x403d, 0x04}, //
    {0x4300, 0xff}, //
    {0x4301, 0x00}, //
    {0x4302, 0x0f}, //
    {0x4316, 0x00}, //
    {0x4500, 0x58}, //
    {0x4503, 0x18}, //
    {0x4600, 0x00}, //
    {0x4601, 0xcb}, //
    {0x481f, 0x32}, //
    {0x4837, 0x16}, //
#if 0 // def CAMERA_BACK_MIPI_LANE_SWITCH
    {0x4850, 0x32}, //----10},//
    {0x4851, 0x10}, //----32},//
#else
    {0x4850, 0x10}, //
    {0x4851, 0x32}, //
#endif
    {0x4b00, 0x2a}, //
    {0x4b0d, 0x00}, //
    {0x4d00, 0x04}, //
    {0x4d01, 0x18}, //
    {0x4d02, 0xc3}, //
    {0x4d03, 0xff}, //
    {0x4d04, 0xff}, //
    {0x4d05, 0xff}, //
    {0x5000, 0x00}, // 0x7e}, //
    {0x5001, 0x01}, //
    {0x5002, 0x08}, //
    {0x5003, 0x20}, //
    {0x5046, 0x12}, //
    {0x5780, 0x3e}, //
    {0x5781, 0x0f}, //
    {0x5782, 0x44}, //
    {0x5783, 0x02}, //
    {0x5784, 0x01}, //
    {0x5785, 0x00}, //
    {0x5786, 0x00}, //
    {0x5787, 0x04}, //
    {0x5788, 0x02}, //
    {0x5789, 0x0f}, //
    {0x578a, 0xfd}, //
    {0x578b, 0xf5}, //
    {0x578c, 0xf5}, //
    {0x578d, 0x03}, //
    {0x578e, 0x08}, //
    {0x578f, 0x0c}, //
    {0x5790, 0x08}, //
    {0x5791, 0x04}, //
    {0x5792, 0x00}, //
    {0x5793, 0x52}, //
    {0x5794, 0xa3}, //
    {0x5871, 0x0d}, //
    {0x5870, 0x18}, //
    {0x586e, 0x10}, //
    {0x586f, 0x08}, //
    {0x58f8, 0x3d}, //
    {0x5901, 0x00}, //
    {0x5b00, 0x02}, //
    {0x5b01, 0x10}, //
    {0x5b02, 0x03}, //
    {0x5b03, 0xcf}, //
    {0x5b05, 0x6c}, //
    {0x5e00, 0x00}, //
    {0x5e01, 0x41}, //
    {0x382d, 0x7f}, //
    {0x4825, 0x3a}, //
    {0x4826, 0x40}, //
    {0x4808, 0x25}, //
    {0x3763, 0x18}, //
    {0x3768, 0xcc}, //
    {0x470b, 0x28}, //
    {0x4202, 0x00}, //
    {0x400d, 0x10}, //
    {0x4040, 0x07}, //
    {0x403e, 0x08}, //
    {0x4041, 0xc6}, //
    {0x3007, 0x80}, //
    {0x400a, 0x01}, //
};
static SENSOR_REG_T ov8858_preview_setting2[334];

static const SENSOR_REG_T ov8858_preview_setting[] = {
    {0x0103, 0x01},
    {0x0100, 0x00}, //
    {0x0302, 0x1e}, //
    {0x0303, 0x00}, //
    {0x0304, 0x03}, //
    {0x030d, 0x1e}, //
    {0x030e, 0x00}, //
    {0x030f, 0x04}, //
    {0x0312, 0x01}, //
    {0x031e, 0x0c}, //
    {0x3600, 0x00}, //
    {0x3601, 0x00}, //
    {0x3602, 0x00}, //
    {0x3603, 0x00}, //
    {0x3604, 0x22}, //
    {0x3605, 0x20}, //
    {0x3606, 0x00}, //
    {0x3607, 0x20}, //
    {0x3608, 0x11}, //
    {0x3609, 0x28}, //
    {0x360a, 0x00}, //
    {0x360b, 0x05}, //
    {0x360c, 0xd4}, //
    {0x360d, 0x40}, //
    {0x360e, 0x0c}, //
    {0x360f, 0x20}, //
    {0x3610, 0x07}, //
    {0x3611, 0x20}, //
    {0x3612, 0x88}, //
    {0x3613, 0x80}, //
    {0x3614, 0x58}, //
    {0x3615, 0x00}, //
    {0x3616, 0x4a}, //
    {0x3617, 0x40}, //
    {0x3618, 0x5a}, //
    {0x3619, 0x70}, //
    {0x361a, 0x99}, //
    {0x361b, 0x0a}, //
    {0x361c, 0x07}, //
    {0x361d, 0x00}, //
    {0x361e, 0x00}, //
    {0x361f, 0x00}, //
    {0x3638, 0xff}, //
    {0x3633, 0x0f}, //
    {0x3634, 0x0f}, //
    {0x3635, 0x0f}, //
    {0x3636, 0x12}, //
    {0x3645, 0x13}, //
    {0x3646, 0x83}, //
    {0x364a, 0x07}, //
    {0x3015, 0x01}, //
    {0x3018, 0x72}, //
    {0x3020, 0x93}, //
    {0x3022, 0x01}, //
    {0x3031, 0x0a}, //
    {0x3034, 0x00}, //
    {0x3106, 0x01}, //
    {0x3305, 0xf1}, //
    {0x3308, 0x00}, //
    {0x3309, 0x28}, //
    {0x330a, 0x00}, //
    {0x330b, 0x20}, //
    {0x330c, 0x00}, //
    {0x330d, 0x00}, //
    {0x330e, 0x00}, //
    {0x330f, 0x40}, //
    {0x3307, 0x04}, //
    {0x3500, 0x00}, //
    {0x3501, 0x4d}, //
    {0x3502, 0x40}, //
    {0x3503, 0x80}, //
    {0x3505, 0x80}, //
    {0x3508, 0x04}, //
    {0x3509, 0x00}, //
    {0x350c, 0x00}, //
    {0x350d, 0x80}, //
    {0x3510, 0x00}, //
    {0x3511, 0x02}, //
    {0x3512, 0x00}, //
    {0x3700, 0x30}, //
    {0x3701, 0x18}, //
    {0x3702, 0x50}, //
    {0x3703, 0x32}, //
    {0x3704, 0x28}, //
    {0x3705, 0x00}, //
    {0x3706, 0x82}, //
    {0x3707, 0x08}, //
    {0x3708, 0x48}, //
    {0x3709, 0x66}, //
    {0x370a, 0x01}, //
    {0x370b, 0x82}, //
    {0x370c, 0x07}, //
    {0x3718, 0x14}, //
    {0x3719, 0x31}, //
    {0x3712, 0x44}, //
    {0x3714, 0x24}, //
    {0x371e, 0x31}, //
    {0x371f, 0x7f}, //
    {0x3720, 0x0a}, //
    {0x3721, 0x0a}, //
    {0x3724, 0x0c}, //
    {0x3725, 0x02}, //
    {0x3726, 0x0c}, //
    {0x3728, 0x0a}, //
    {0x3729, 0x03}, //
    {0x372a, 0x06}, //
    {0x372b, 0xa6}, //
    {0x372c, 0xa6}, //
    {0x372d, 0xa6}, //
    {0x372e, 0x0c}, //
    {0x372f, 0x20}, //
    {0x3730, 0x02}, //
    {0x3731, 0x0c}, //
    {0x3732, 0x28}, //
    {0x3733, 0x10}, //
    {0x3734, 0x40}, //
    {0x3736, 0x30}, //
    {0x373a, 0x0a}, //
    {0x373b, 0x0b}, //
    {0x373c, 0x14}, //
    {0x373e, 0x06}, //
    {0x3750, 0x0a}, //
    {0x3751, 0x0e}, //
    {0x3755, 0x10}, //
    {0x3758, 0x00}, //
    {0x3759, 0x4c}, //
    {0x375a, 0x0c}, //
    {0x375b, 0x26}, //
    {0x375c, 0x20}, //
    {0x375d, 0x04}, //
    {0x375e, 0x00}, //
    {0x375f, 0x28}, //
    {0x3768, 0x22}, //
    {0x3769, 0x44}, //
    {0x376a, 0x44}, //
    {0x3761, 0x00}, //
    {0x3762, 0x00}, //
    {0x3763, 0x00}, //
    {0x3766, 0xff}, //
    {0x376b, 0x00}, //
    {0x3772, 0x46}, //
    {0x3773, 0x04}, //
    {0x3774, 0x2c}, //
    {0x3775, 0x13}, //
    {0x3776, 0x08}, //
    {0x3777, 0x00}, //
    {0x3778, 0x17}, //
    {0x37a0, 0x88}, //
    {0x37a1, 0x7a}, //
    {0x37a2, 0x7a}, //
    {0x37a3, 0x00}, //
    {0x37a4, 0x00}, //
    {0x37a5, 0x00}, //
    {0x37a6, 0x00}, //
    {0x37a7, 0x88}, //
    {0x37a8, 0x98}, //
    {0x37a9, 0x98}, //
    {0x3760, 0x00}, //
    {0x376f, 0x01}, //
    {0x37aa, 0x88}, //
    {0x37ab, 0x5c}, //
    {0x37ac, 0x5c}, //
    {0x37ad, 0x55}, //
    {0x37ae, 0x19}, //
    {0x37af, 0x19}, //
    {0x37b0, 0x00}, //
    {0x37b1, 0x00}, //
    {0x37b2, 0x00}, //
    {0x37b3, 0x84}, //
    {0x37b4, 0x84}, //
    {0x37b5, 0x60}, //
    {0x37b6, 0x00}, //
    {0x37b7, 0x00}, //
    {0x37b8, 0x00}, //
    {0x37b9, 0xff}, //
    {0x3800, 0x00}, //
    {0x3801, 0x0c}, //
    {0x3802, 0x00}, //
    {0x3803, 0x0c}, //
    {0x3804, 0x0c}, //
    {0x3805, 0xd3}, //
    {0x3806, 0x09}, //
    {0x3807, 0xa3}, //
    {0x3808, 0x06}, //
    {0x3809, 0x60}, //
    {0x380a, 0x04}, //
    {0x380b, 0xc8}, //
    {0x380c, 0x07}, //
    {0x380d, 0x88}, //
    {0x380e, 0x04}, //
    {0x380f, 0xdc}, //
    {0x3810, 0x00}, //
    {0x3811, 0x04}, //
    {0x3813, 0x02}, //
    {0x3814, 0x03}, //
    {0x3815, 0x01}, //
#ifdef CAMERA_IMAGE_180
    {0x3820, 0x06}, //
    {0x3821, 0x61}, //
#else
    {0x3820, 0x00}, //
    {0x3821, 0x67}, //
#endif
    {0x382a, 0x03}, //
    {0x382b, 0x01}, //
    {0x3830, 0x08}, //
    {0x3836, 0x02}, //
    {0x3837, 0x18}, //
    {0x3841, 0xff}, //
    {0x3846, 0x48}, //
    {0x3d85, 0x16}, //
    {0x3d8c, 0x73}, //
    {0x3d8d, 0xde}, //
    {0x3f08, 0x10}, //
    {0x3f0a, 0x00}, //
    {0x4000, 0xf5}, //
    {0x4001, 0x10}, //
    {0x4005, 0x10}, //
    {0x4002, 0x27}, //
    {0x4009, 0x81}, //
    {0x400b, 0x0c}, //
    {0x4011, 0x20}, //
    {0x401b, 0x00}, //
    {0x401d, 0x00}, //
    {0x4020, 0x00}, //
    {0x4021, 0x04}, //
    {0x4022, 0x06}, //
    {0x4023, 0x00}, //
    {0x4024, 0x0f}, //
    {0x4025, 0x2a}, //
    {0x4026, 0x0f}, //
    {0x4027, 0x2b}, //
    {0x4028, 0x00}, //
    {0x4029, 0x02}, //
    {0x402a, 0x04}, //
    {0x402b, 0x04}, //
    {0x402c, 0x00}, //
    {0x402d, 0x02}, //
    {0x402e, 0x04}, //
    {0x402f, 0x04}, //
    {0x401f, 0x00}, //
    {0x4034, 0x3f}, //
    {0x403d, 0x04}, //
    {0x4300, 0xff}, //
    {0x4301, 0x00}, //
    {0x4302, 0x0f}, //
    {0x4316, 0x00}, //
    {0x4500, 0x58}, //
    {0x4503, 0x18}, //
    {0x4600, 0x00}, //
    {0x4601, 0xcb}, //
    {0x481f, 0x32}, //
    {0x4837, 0x16}, //
#if 0 // def CAMERA_BACK_MIPI_LANE_SWITCH
    {0x4850, 0x32}, //----10},//
    {0x4851, 0x10}, //----32},//
#else
    {0x4850, 0x10}, //
    {0x4851, 0x32}, //
#endif
    {0x4b00, 0x2a}, //
    {0x4b0d, 0x00}, //
    {0x4d00, 0x04}, //
    {0x4d01, 0x18}, //
    {0x4d02, 0xc3}, //
    {0x4d03, 0xff}, //
    {0x4d04, 0xff}, //
    {0x4d05, 0xff}, //
    {0x5000, 0x00}, //
    {0x5001, 0x01}, //
    {0x5002, 0x08}, //
    {0x5003, 0x20}, //
    {0x5046, 0x12}, //
    {0x5780, 0x3e}, //
    {0x5781, 0x0f}, //
    {0x5782, 0x44}, //
    {0x5783, 0x02}, //
    {0x5784, 0x01}, //
    {0x5785, 0x00}, //
    {0x5786, 0x00}, //
    {0x5787, 0x04}, //
    {0x5788, 0x02}, //
    {0x5789, 0x0f}, //
    {0x578a, 0xfd}, //
    {0x578b, 0xf5}, //
    {0x578c, 0xf5}, //
    {0x578d, 0x03}, //
    {0x578e, 0x08}, //
    {0x578f, 0x0c}, //
    {0x5790, 0x08}, //
    {0x5791, 0x04}, //
    {0x5792, 0x00}, //
    {0x5793, 0x52}, //
    {0x5794, 0xa3}, //
    {0x5871, 0x0d}, //
    {0x5870, 0x18}, //
    {0x586e, 0x10}, //
    {0x586f, 0x08}, //
    {0x58f8, 0x3d}, //
    {0x5901, 0x00}, //
    {0x5b00, 0x02}, //
    {0x5b01, 0x10}, //
    {0x5b02, 0x03}, //
    {0x5b03, 0xcf}, //
    {0x5b05, 0x6c}, //
    {0x5e00, 0x00}, //
    {0x5e01, 0x41}, //
    {0x382d, 0x7f}, //
    {0x4825, 0x3a}, //
    {0x4826, 0x40}, //
    {0x4808, 0x25}, //
    {0x3763, 0x18}, //
    {0x3768, 0xcc}, //
    {0x470b, 0x28}, //
    {0x4202, 0x00}, //
    {0x400d, 0x10}, //
    {0x4040, 0x07}, //
    {0x403e, 0x08}, //
    {0x4041, 0xc6}, //
    {0x3007, 0x80}, //
    {0x400a, 0x01}, //	//@@ Preview setting
    // 100 99 1632 1224;32 ; Resolution
    //{0x0100,0x00},//
    {0x3769, 0x44}, //
    {0x376a, 0x44}, //
    {0x3808, 0x06}, //
    {0x3809, 0x60}, //
    {0x380a, 0x04}, //
    {0x380b, 0xc8}, //
    {0x380c, 0x07}, //
    {0x380d, 0x94}, //
    {0x380e, 0x09}, //
    {0x380f, 0xaa}, //
    {0x3814, 0x03}, //
#ifdef CAMERA_IMAGE_180
    {0x3820, 0x06}, //
    {0x3821, 0x61}, //
#else
    {0x3820, 0x00}, //
    {0x3821, 0x67}, //
#endif
    {0x382a, 0x03}, //
    {0x302b, 0x01}, // ;
    {0x3830, 0x08}, //
    {0x3836, 0x02}, //
    {0x4000, 0xf5}, //
    {0x4001, 0x10}, //
    {0x4022, 0x04}, //;06
    {0x4023, 0x90}, //;00
    {0x4025, 0x2a}, //
    {0x4027, 0x2b}, //
    {0x402a, 0x04}, // ;
    {0x402b, 0x04}, //
    {0x402e, 0x04}, //
    {0x402f, 0x08}, //
    {0x4600, 0x00}, //
    {0x4601, 0xcb}, //
    {0x382d, 0x7f}, //
    {0x5901, 0x00}, // ;
                    //{0x0100,0x01},//;
};

static const SENSOR_REG_T ov8858_snapshot_setting[] = {
    {0x0103, 0x01},
    {0x0100, 0x00}, //
    {0x0302, 0x1e}, //
    {0x0303, 0x00}, //
    {0x0304, 0x03}, //
    {0x030d, 0x1e}, //
    {0x030e, 0x00}, //
    {0x030f, 0x04}, //
    {0x0312, 0x01}, //
    {0x031e, 0x0c}, //
    {0x3600, 0x00}, //
    {0x3601, 0x00}, //
    {0x3602, 0x00}, //
    {0x3603, 0x00}, //
    {0x3604, 0x22}, //
    {0x3605, 0x20}, //
    {0x3606, 0x00}, //
    {0x3607, 0x20}, //
    {0x3608, 0x11}, //
    {0x3609, 0x28}, //
    {0x360a, 0x00}, //
    {0x360b, 0x05}, //
    {0x360c, 0xd4}, //
    {0x360d, 0x40}, //
    {0x360e, 0x0c}, //
    {0x360f, 0x20}, //
    {0x3610, 0x07}, //
    {0x3611, 0x20}, //
    {0x3612, 0x88}, //
    {0x3613, 0x80}, //
    {0x3614, 0x58}, //
    {0x3615, 0x00}, //
    {0x3616, 0x4a}, //
    {0x3617, 0x40}, //
    {0x3618, 0x5a}, //
    {0x3619, 0x70}, //
    {0x361a, 0x99}, //
    {0x361b, 0x0a}, //
    {0x361c, 0x07}, //
    {0x361d, 0x00}, //
    {0x361e, 0x00}, //
    {0x361f, 0x00}, //
    {0x3638, 0xff}, //
    {0x3633, 0x0f}, //
    {0x3634, 0x0f}, //
    {0x3635, 0x0f}, //
    {0x3636, 0x12}, //
    {0x3645, 0x13}, //
    {0x3646, 0x83}, //
    {0x364a, 0x07}, //
    {0x3015, 0x01}, //
    {0x3018, 0x72}, //
    {0x3020, 0x93}, //
    {0x3022, 0x01}, //
    {0x3031, 0x0a}, //
    {0x3034, 0x00}, //
    {0x3106, 0x01}, //
    {0x3305, 0xf1}, //
    {0x3308, 0x00}, //
    {0x3309, 0x28}, //
    {0x330a, 0x00}, //
    {0x330b, 0x20}, //
    {0x330c, 0x00}, //
    {0x330d, 0x00}, //
    {0x330e, 0x00}, //
    {0x330f, 0x40}, //
    {0x3307, 0x04}, //
    {0x3500, 0x00}, //
    {0x3501, 0x4d}, //
    {0x3502, 0x40}, //
    {0x3503, 0x80}, //
    {0x3505, 0x80}, //
    {0x3508, 0x04}, //
    {0x3509, 0x00}, //
    {0x350c, 0x00}, //
    {0x350d, 0x80}, //
    {0x3510, 0x00}, //
    {0x3511, 0x02}, //
    {0x3512, 0x00}, //
    {0x3700, 0x30}, //
    {0x3701, 0x18}, //
    {0x3702, 0x50}, //
    {0x3703, 0x32}, //
    {0x3704, 0x28}, //
    {0x3705, 0x00}, //
    {0x3706, 0x82}, //
    {0x3707, 0x08}, //
    {0x3708, 0x48}, //
    {0x3709, 0x66}, //
    {0x370a, 0x01}, //
    {0x370b, 0x82}, //
    {0x370c, 0x07}, //
    {0x3718, 0x14}, //
    {0x3719, 0x31}, //
    {0x3712, 0x44}, //
    {0x3714, 0x24}, //
    {0x371e, 0x31}, //
    {0x371f, 0x7f}, //
    {0x3720, 0x0a}, //
    {0x3721, 0x0a}, //
    {0x3724, 0x0c}, //
    {0x3725, 0x02}, //
    {0x3726, 0x0c}, //
    {0x3728, 0x0a}, //
    {0x3729, 0x03}, //
    {0x372a, 0x06}, //
    {0x372b, 0xa6}, //
    {0x372c, 0xa6}, //
    {0x372d, 0xa6}, //
    {0x372e, 0x0c}, //
    {0x372f, 0x20}, //
    {0x3730, 0x02}, //
    {0x3731, 0x0c}, //
    {0x3732, 0x28}, //
    {0x3733, 0x10}, //
    {0x3734, 0x40}, //
    {0x3736, 0x30}, //
    {0x373a, 0x0a}, //
    {0x373b, 0x0b}, //
    {0x373c, 0x14}, //
    {0x373e, 0x06}, //
    {0x3750, 0x0a}, //
    {0x3751, 0x0e}, //
    {0x3755, 0x10}, //
    {0x3758, 0x00}, //
    {0x3759, 0x4c}, //
    {0x375a, 0x0c}, //
    {0x375b, 0x26}, //
    {0x375c, 0x20}, //
    {0x375d, 0x04}, //
    {0x375e, 0x00}, //
    {0x375f, 0x28}, //
    {0x3768, 0x22}, //
    {0x3769, 0x44}, //
    {0x376a, 0x44}, //
    {0x3761, 0x00}, //
    {0x3762, 0x00}, //
    {0x3763, 0x00}, //
    {0x3766, 0xff}, //
    {0x376b, 0x00}, //
    {0x3772, 0x46}, //
    {0x3773, 0x04}, //
    {0x3774, 0x2c}, //
    {0x3775, 0x13}, //
    {0x3776, 0x08}, //
    {0x3777, 0x00}, //
    {0x3778, 0x17}, //
    {0x37a0, 0x88}, //
    {0x37a1, 0x7a}, //
    {0x37a2, 0x7a}, //
    {0x37a3, 0x00}, //
    {0x37a4, 0x00}, //
    {0x37a5, 0x00}, //
    {0x37a6, 0x00}, //
    {0x37a7, 0x88}, //
    {0x37a8, 0x98}, //
    {0x37a9, 0x98}, //
    {0x3760, 0x00}, //
    {0x376f, 0x01}, //
    {0x37aa, 0x88}, //
    {0x37ab, 0x5c}, //
    {0x37ac, 0x5c}, //
    {0x37ad, 0x55}, //
    {0x37ae, 0x19}, //
    {0x37af, 0x19}, //
    {0x37b0, 0x00}, //
    {0x37b1, 0x00}, //
    {0x37b2, 0x00}, //
    {0x37b3, 0x84}, //
    {0x37b4, 0x84}, //
    {0x37b5, 0x60}, //
    {0x37b6, 0x00}, //
    {0x37b7, 0x00}, //
    {0x37b8, 0x00}, //
    {0x37b9, 0xff}, //
    {0x3800, 0x00}, //
    {0x3801, 0x0c}, //
    {0x3802, 0x00}, //
    {0x3803, 0x0c}, //
    {0x3804, 0x0c}, //
    {0x3805, 0xd3}, //
    {0x3806, 0x09}, //
    {0x3807, 0xa3}, //
    {0x3808, 0x06}, //
    {0x3809, 0x60}, //
    {0x380a, 0x04}, //
    {0x380b, 0xc8}, //
    {0x380c, 0x07}, //
    {0x380d, 0x88}, //
    {0x380e, 0x04}, //
    {0x380f, 0xdc}, //
    {0x3810, 0x00}, //
    {0x3811, 0x04}, //
    {0x3813, 0x02}, //
    {0x3814, 0x03}, //
    {0x3815, 0x01}, //
#ifdef CAMERA_IMAGE_180
    {0x3820, 0x06}, //
    {0x3821, 0x61}, //
#else
    {0x3820, 0x00}, //
    {0x3821, 0x67}, //
#endif
    {0x382a, 0x03}, //
    {0x382b, 0x01}, //
    {0x3830, 0x08}, //
    {0x3836, 0x02}, //
    {0x3837, 0x18}, //
    {0x3841, 0xff}, //
    {0x3846, 0x48}, //
    {0x3d85, 0x16}, //
    {0x3d8c, 0x73}, //
    {0x3d8d, 0xde}, //
    {0x3f08, 0x10}, //
    {0x3f0a, 0x00}, //
    {0x4000, 0xf5}, //
    {0x4001, 0x10}, //
    {0x4005, 0x10}, //
    {0x4002, 0x27}, //
    {0x4009, 0x81}, //
    {0x400b, 0x0c}, //
    {0x4011, 0x20}, //
    {0x401b, 0x00}, //
    {0x401d, 0x00}, //
    {0x4020, 0x00}, //
    {0x4021, 0x04}, //
    {0x4022, 0x06}, //
    {0x4023, 0x00}, //
    {0x4024, 0x0f}, //
    {0x4025, 0x2a}, //
    {0x4026, 0x0f}, //
    {0x4027, 0x2b}, //
    {0x4028, 0x00}, //
    {0x4029, 0x02}, //
    {0x402a, 0x04}, //
    {0x402b, 0x04}, //
    {0x402c, 0x00}, //
    {0x402d, 0x02}, //
    {0x402e, 0x04}, //
    {0x402f, 0x04}, //
    {0x401f, 0x00}, //
    {0x4034, 0x3f}, //
    {0x403d, 0x04}, //
    {0x4300, 0xff}, //
    {0x4301, 0x00}, //
    {0x4302, 0x0f}, //
    {0x4316, 0x00}, //
    {0x4500, 0x58}, //
    {0x4503, 0x18}, //
    {0x4600, 0x00}, //
    {0x4601, 0xcb}, //
    {0x481f, 0x32}, //
    {0x4837, 0x16}, //
#if 0 // def CAMERA_BACK_MIPI_LANE_SWITCH
    {0x4850, 0x32}, //----10},//
    {0x4851, 0x10}, //----32},//
#else
    {0x4850, 0x10}, //
    {0x4851, 0x32}, //
#endif

    {0x4b00, 0x2a}, //
    {0x4b0d, 0x00}, //
    {0x4d00, 0x04}, //
    {0x4d01, 0x18}, //
    {0x4d02, 0xc3}, //
    {0x4d03, 0xff}, //
    {0x4d04, 0xff}, //
    {0x4d05, 0xff}, //
    {0x5000, 0x00}, //
    {0x5001, 0x01}, //
    {0x5002, 0x08}, //
    {0x5003, 0x20}, //
    {0x5046, 0x12}, //
    {0x5780, 0x3e}, //
    {0x5781, 0x0f}, //
    {0x5782, 0x44}, //
    {0x5783, 0x02}, //
    {0x5784, 0x01}, //
    {0x5785, 0x00}, //
    {0x5786, 0x00}, //
    {0x5787, 0x04}, //
    {0x5788, 0x02}, //
    {0x5789, 0x0f}, //
    {0x578a, 0xfd}, //
    {0x578b, 0xf5}, //
    {0x578c, 0xf5}, //
    {0x578d, 0x03}, //
    {0x578e, 0x08}, //
    {0x578f, 0x0c}, //
    {0x5790, 0x08}, //
    {0x5791, 0x04}, //
    {0x5792, 0x00}, //
    {0x5793, 0x52}, //
    {0x5794, 0xa3}, //
    {0x5871, 0x0d}, //
    {0x5870, 0x18}, //
    {0x586e, 0x10}, //
    {0x586f, 0x08}, //
    {0x58f8, 0x3d}, //
    {0x5901, 0x00}, //
    {0x5b00, 0x02}, //
    {0x5b01, 0x10}, //
    {0x5b02, 0x03}, //
    {0x5b03, 0xcf}, //
    {0x5b05, 0x6c}, //
    {0x5e00, 0x00}, //
    {0x5e01, 0x41}, //
    {0x382d, 0x7f}, //
    {0x4825, 0x3a}, //
    {0x4826, 0x40}, //
    {0x4808, 0x25}, //
    {0x3763, 0x18}, //
    {0x3768, 0xcc}, //
    {0x470b, 0x28}, //
    {0x4202, 0x00}, //
    {0x400d, 0x10}, //
    {0x4040, 0x07}, //
    {0x403e, 0x08}, //
    {0x4041, 0xc6}, //
    {0x3007, 0x80}, //
    {0x400a, 0x01}, //	//@@ Capture setting
    // 100 99 3264 2448 ; Resolution

    //{0x0100,0x00},//;
    {0x3769, 0x44}, // ;
    {0x376a, 0x44}, // ;
    {0x3808, 0x0c}, //
    {0x3809, 0xc0}, //
    {0x380a, 0x09}, //
    {0x380b, 0x90}, //
    {0x380c, 0x07}, //
    {0x380d, 0x94}, //
    {0x380e, 0x09}, //
    {0x380f, 0xaa}, //
    {0x3814, 0x01}, //

#ifdef CAMERA_IMAGE_180
    {0x3820, 0x06}, //
    {0x3821, 0x40}, //
#else
    {0x3820, 0x00}, //
    {0x3821, 0x46}, // y
#endif
    {0x382a, 0x01}, //
    {0x302b, 0x01}, // ;
    {0x3830, 0x06}, //
    {0x3836, 0x01}, //
    {0x4000, 0xf5}, //
    {0x4001, 0x00}, //
    {0x4022, 0x0c}, //
    {0x4023, 0x60}, //
    {0x4025, 0x36}, //
    {0x4027, 0x37}, //
    {0x402a, 0x04}, // ;
    {0x402b, 0x08}, //
    {0x402e, 0x04}, //
    {0x402f, 0x08}, //
    {0x4600, 0x01}, //
    {0x4601, 0x97}, //
    {0x382d, 0xff}, //
    {0x5901, 0x00}, // ;
                    //{0x0100,0x01},//;
};
static const SENSOR_REG_T ov8858_1280x720_setting[] = {
    /*@@ initial setting
    100 99 3264 2448
    42 0103 01
    42 303f 01
    42 3012 6c*/
    {0x0103, 0x01},
    {0x0100, 0x00},
    {0x0302, 0x1e},
    {0x0303, 0x00},
    {0x0304, 0x03},
    {0x030e, 0x00},
    {0x030f, 0x04},
    {0x0312, 0x01},
    {0x031e, 0x0c},
    {0x3600, 0x00},
    {0x3601, 0x00},
    {0x3602, 0x00},
    {0x3603, 0x00},
    {0x3604, 0x22},
    {0x3605, 0x28},
    {0x3606, 0x00},
    {0x3607, 0x20},
    {0x3608, 0x11},
    {0x3609, 0x28},
    {0x360a, 0x00},
    {0x360b, 0x05},
    {0x360c, 0xd4},
    {0x360d, 0x40},
    {0x360e, 0x0c},
    {0x360f, 0x20},
    {0x3610, 0x07},
    {0x3611, 0x20},
    {0x3612, 0x88},
    {0x3613, 0x80},
    {0x3614, 0x58},
    {0x3615, 0x00},
    {0x3616, 0x4a},
    {0x3617, 0x40},
    {0x3618, 0x5a},
    {0x3619, 0x70},
    {0x361a, 0x99},
    {0x361b, 0x0a},
    {0x361c, 0x07},
    {0x361d, 0x00},
    {0x361e, 0x00},
    {0x361f, 0x00},
    {0x3638, 0xff},
    {0x3633, 0x0f},
    {0x3634, 0x0f},
    {0x3635, 0x0f},
    {0x3636, 0x12},
    {0x3645, 0x13},
    {0x3646, 0x83},
    {0x364a, 0x07},
    {0x3015, 0x01},
    {0x3018, 0x72},
    {0x3020, 0x93},
    {0x3022, 0x01},
    {0x3031, 0x0a},
    {0x3034, 0x00},
    {0x3106, 0x01},
    {0x3305, 0xf1},
    {0x3308, 0x00},
    {0x3309, 0x28},
    {0x330a, 0x00},
    {0x330b, 0x20},
    {0x330c, 0x00},
    {0x330d, 0x00},
    {0x330e, 0x00},
    {0x330f, 0x40},
    {0x3307, 0x04},
    {0x3500, 0x00},
    {0x3501, 0x9a},
    {0x3502, 0x60},
    {0x3503, 0x80},
    {0x3505, 0x80},
    {0x3508, 0x02},
    {0x3509, 0x00},
    {0x350c, 0x00},
    {0x350d, 0x80},
    {0x3510, 0x00},
    {0x3511, 0x02},
    {0x3512, 0x00},
    {0x3700, 0x30},
    {0x3701, 0x18},
    {0x3702, 0x50},
    {0x3703, 0x33},
    {0x3704, 0x28},
    {0x3705, 0x00},
    {0x3706, 0x82},
    {0x3707, 0x08},
    {0x3708, 0x48},
    {0x3709, 0x66},
    {0x370a, 0x01},
    {0x370b, 0x82},
    {0x370c, 0x07},
    {0x3718, 0x14},
    {0x3719, 0x31},
    {0x3712, 0x44},
    {0x3714, 0x24},
    {0x371e, 0x31},
    {0x371f, 0x7f},
    {0x3720, 0x0a},
    {0x3721, 0x0a},
    {0x3724, 0x0c},
    {0x3725, 0x02},
    {0x3726, 0x0c},
    {0x3728, 0x0a},
    {0x3729, 0x03},
    {0x372a, 0x06},
    {0x372b, 0xa6},
    {0x372c, 0xa6},
    {0x372d, 0xa6},
    {0x372e, 0x0c},
    {0x372f, 0x20},
    {0x3730, 0x02},
    {0x3731, 0x0c},
    {0x3732, 0x28},
    {0x3733, 0x10},
    {0x3734, 0x40},
    {0x3736, 0x30},
    {0x373a, 0x0a},
    {0x373b, 0x0b},
    {0x373c, 0x14},
    {0x373e, 0x06},
    {0x3750, 0x0a},
    {0x3751, 0x0e},
    {0x3755, 0x10},
    {0x3758, 0x00},
    {0x3759, 0x4c},
    {0x375a, 0x0c},
    {0x375b, 0x26},
    {0x375c, 0x20},
    {0x375d, 0x04},
    {0x375e, 0x00},
    {0x375f, 0x28},
    {0x3768, 0x22},
    {0x3769, 0x66},
    {0x376a, 0x24},
    {0x3761, 0x00},
    {0x3762, 0x00},
    {0x3763, 0x00},
    {0x3766, 0xff},
    {0x376b, 0x00},
    {0x3772, 0x46},
    {0x3773, 0x04},
    {0x3774, 0x2c},
    {0x3775, 0x13},
    {0x3776, 0x08},
    {0x3777, 0x00},
    {0x3778, 0x17},
    {0x377a, 0x0c},
    {0x37a0, 0x88},
    {0x37a1, 0x7a},
    {0x37a2, 0x7a},
    {0x37a3, 0x00},
    {0x37a4, 0x00},
    {0x37a5, 0x00},
    {0x37a6, 0x00},
    {0x37a7, 0x88},
    {0x37a8, 0x98},
    {0x37a9, 0x98},
    {0x3760, 0x00},
    {0x376f, 0x01},
    {0x37aa, 0x88},
    {0x37ab, 0x5c},
    {0x37ac, 0x5c},
    {0x37ad, 0x55},
    {0x37ae, 0x19},
    {0x37af, 0x19},
    {0x37b0, 0x00},
    {0x37b1, 0x00},
    {0x37b2, 0x00},
    {0x37b3, 0x84},
    {0x37b4, 0x84},
    {0x37b5, 0x60},
    {0x37b6, 0x00},
    {0x37b7, 0x00},
    {0x37b8, 0x00},
    {0x37b9, 0xff},
    {0x3800, 0x00},
    {0x3801, 0x0c},
    {0x3802, 0x00},
    {0x3803, 0x0c},
    {0x3804, 0x0c},
    {0x3805, 0xd3},
    {0x3806, 0x09},
    {0x3807, 0xa3},
    {0x3808, 0x0c},
    {0x3809, 0xc0},
    {0x380a, 0x09},
    {0x380b, 0x90},
    {0x380c, 0x07},
    {0x380d, 0x90},
    {0x380e, 0x09},
    {0x380f, 0xae},
    {0x3810, 0x00},
    {0x3811, 0x04},
    {0x3813, 0x02},
    {0x3814, 0x01},
    {0x3815, 0x01},
    {0x3820, 0x00},
    {0x3821, 0x46},
    {0x382a, 0x01},
    {0x382b, 0x01},
    {0x382d, 0xff},
    {0x3830, 0x06},
    {0x3836, 0x02},
    {0x3837, 0x18},
    {0x3841, 0xff},
    {0x3846, 0x48},
    {0x3d85, 0x16},
    {0x3d8c, 0x73},
    {0x3d8d, 0xde},
    {0x3f08, 0x10},
    {0x4000, 0xf5},
    {0x4001, 0x00},
    {0x4005, 0x10},
    {0x4002, 0x27},
    {0x4009, 0x81},
    {0x400b, 0x0c},
    {0x4011, 0x20},
    {0x401b, 0x00},
    {0x401d, 0x00},
    {0x4020, 0x00},
    {0x4021, 0x04},
    {0x4022, 0x0c},
    {0x4023, 0x60},
    {0x4024, 0x0f},
    {0x4025, 0x36},
    {0x4026, 0x0f},
    {0x4027, 0x37},
    {0x4028, 0x00},
    {0x4029, 0x04},
    {0x402a, 0x04},
    {0x402b, 0x08},
    {0x402c, 0x00},
    {0x402d, 0x02},
    {0x402e, 0x04},
    {0x402f, 0x08},
    {0x401f, 0x00},
    {0x4034, 0x3f},
    {0x403d, 0x04},
    {0x4300, 0xff},
    {0x4301, 0x00},
    {0x4302, 0x0f},
    {0x4316, 0x00},
    {0x4503, 0x18},
    {0x4600, 0x01},
    {0x4601, 0x97},
    {0x481f, 0x32},
    {0x4837, 0x16},
    {0x4850, 0x10},
    {0x4851, 0x32},
    {0x4b00, 0x2a},
    {0x4b0d, 0x00},
    {0x4d00, 0x04},
    {0x4d01, 0x18},
    {0x4d02, 0xc3},
    {0x4d03, 0xff},
    {0x4d04, 0xff},
    {0x4d05, 0xff},
    {0x5000, 0x00}, // 7e},
    {0x5001, 0x01},
    {0x5002, 0x08},
    {0x5003, 0x20},
    {0x5046, 0x12},
    {0x5780, 0x3e},
    {0x5781, 0x0f},
    {0x5782, 0x44},
    {0x5783, 0x02},
    {0x5784, 0x01},
    {0x5785, 0x00},
    {0x5786, 0x00},
    {0x5787, 0x04},
    {0x5788, 0x02},
    {0x5789, 0x0f},
    {0x578a, 0xfd},
    {0x578b, 0xf5},
    {0x578c, 0xf5},
    {0x578d, 0x03},
    {0x578e, 0x08},
    {0x578f, 0x0c},
    {0x5790, 0x08},
    {0x5791, 0x04},
    {0x5792, 0x00},
    {0x5793, 0x52},
    {0x5794, 0xa3},
    {0x5871, 0x0d},
    {0x5870, 0x18},
    {0x586e, 0x10},
    {0x586f, 0x08},
    {0x58f8, 0x3d},
    {0x5901, 0x00},
    {0x5b00, 0x02},
    {0x5b01, 0x10},
    {0x5b02, 0x03},
    {0x5b03, 0xcf},
    {0x5b05, 0x6c},
    {0x5e00, 0x00},
    {0x5e01, 0x41},
    {0x4825, 0x3a},
    {0x4826, 0x40},
    {0x4808, 0x25},
    {0x3763, 0x18},
    {0x470b, 0x28},
    {0x4202, 0x00},
    {0x400d, 0x10},
    {0x4040, 0x07},
    {0x403e, 0x08},
    {0x4041, 0xc6},
    {0x3007, 0x80},
    {0x400a, 0x01},
    //    {0x0100, 0x01},
    //       @@ 1280x720 setting 90fps
    //      100 99 1280 720
    {0x0100, 0x00}, //
    {0x3808, 0x05}, //
    {0x3809, 0x00}, //
    {0x380a, 0x02}, //
    {0x380b, 0xd0}, //
    {0x380c, 0x07}, //
    {0x380d, 0xa8}, // ;88
    {0x380e, 0x03}, // ;04
    {0x380f, 0x30}, // ;dc
    {0x3814, 0x03}, //
    {0x3821, 0x67}, //
    {0x382a, 0x03}, //
    {0x382d, 0x7f}, //
    {0x4001, 0x10}, //
    {0x4022, 0x04}, //
    {0x4023, 0xa0}, //
    {0x4025, 0x2a}, //
    {0x4027, 0x2b}, //
    {0x4029, 0x02}, //
    {0x402a, 0x02}, //
    {0x402b, 0x04}, //
    {0x402e, 0x02}, //
    {0x402f, 0x04}, //
    {0x4600, 0x00}, //
    {0x4601, 0x98}, //
    {0x382d, 0xff}, //
    //    {0x0100, 0x01},//

};

static SENSOR_STATIC_INFO_T s_ov8858_static_info[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     .static_info = {.f_num = 200,
                     .focal_length = 296,
                     .max_fps = 0,
                     .max_adgain = 16 * 4,
                     .ois_supported = 0,
                     .pdaf_supported = 0,
                     .exp_valid_frame_num = 1,
                     .clamp_level = 16,
                     .adgain_valid_frame_num = 1,
                     .fov_info = {{3.678f, 2.768f},
                                  3.035f}}} /*If there are multiple
                                               modules,please add here*/
};

static SENSOR_MODE_FPS_INFO_T s_ov8858_mode_fps_info[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     {.is_init = 0,
      {{SENSOR_MODE_COMMON_INIT, 0, 1, 0, 0},
       {SENSOR_MODE_PREVIEW_ONE, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_ONE_FIRST, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_ONE_SECOND, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_ONE_THIRD, 0, 1, 0, 0},
       {SENSOR_MODE_PREVIEW_TWO, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_TWO_FIRST, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_TWO_SECOND, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_TWO_THIRD, 0, 1, 0, 0}}}}
    /*If there are multiple modules,please add here*/
};

/*Be careful to add new setting when sbs mode.*/
/*If added, please check which mode send to isp when isp video start*/
static struct sensor_res_tab_info
    s_ov8858_resolution_tab_raw[VENDOR_NUM] =
        {
            {.module_id = MODULE_SUNNY,
             .reg_tab =
                 {
                     {ADDR_AND_LEN_OF_ARRAY(ov8858_init_setting2), PNULL, 0,
                      .width = 0, .height = 0, .xclk_to_sensor = EX_MCLK,
                      .image_format = SENSOR_IMAGE_FORMAT_RAW},
                     {ADDR_AND_LEN_OF_ARRAY(ov8858_1280x720_setting), PNULL, 0,
                      .width = 1280, .height = 720, .xclk_to_sensor = 24,
                      .image_format = SENSOR_IMAGE_FORMAT_RAW},

#ifdef SBS_MODE_SENSOR
                     {ADDR_AND_LEN_OF_ARRAY(ov8858_preview_setting2), PNULL, 0,
                      .width = 1600, .height = 1200, .xclk_to_sensor = 24,
                      .image_format = SENSOR_IMAGE_FORMAT_RAW},
#endif
                     {ADDR_AND_LEN_OF_ARRAY(ov8858_preview_setting), PNULL, 0,
                      .width = PREVIEW_WIDTH,
                      .height = PREVIEW_HEIGHT, .xclk_to_sensor = 24,
                      .image_format = SENSOR_IMAGE_FORMAT_RAW},
#ifdef SBS_MODE_SENSOR
                     {ADDR_AND_LEN_OF_ARRAY(ov8858_preview_setting2), PNULL,
                      0, .width = 3200, .height = 1200, .xclk_to_sensor = 24,
                      .image_format = SENSOR_IMAGE_FORMAT_RAW},
#endif
                     {ADDR_AND_LEN_OF_ARRAY(ov8858_snapshot_setting), PNULL,
                      0, .width = SNAPSHOT_WIDTH, .height = SNAPSHOT_HEIGHT,
                      .xclk_to_sensor = 24,
                      .image_format = SENSOR_IMAGE_FORMAT_RAW},
#if 0
    {ADDR_AND_LEN_OF_ARRAY(ov8858_init_setting), 0, 0, EX_MCLK,
     SENSOR_IMAGE_FORMAT_RAW},
//    {ADDR_AND_LEN_OF_ARRAY(ov8858_preview_setting2), 1600,
//     1200, EX_MCLK, SENSOR_IMAGE_FORMAT_RAW},
/*    {ADDR_AND_LEN_OF_ARRAY(ov8858_preview_setting), PREVIEW_WIDTH,
     PREVIEW_HEIGHT, EX_MCLK, SENSOR_IMAGE_FORMAT_RAW},*/
    {ADDR_AND_LEN_OF_ARRAY(ov8858_preview_setting2), 3200,
     1200, EX_MCLK, SENSOR_IMAGE_FORMAT_RAW},
   /* {ADDR_AND_LEN_OF_ARRAY(ov8858_snapshot_setting), SNAPSHOT_WIDTH,
     SNAPSHOT_HEIGHT, EX_MCLK, SENSOR_IMAGE_FORMAT_RAW},*/
#endif
                 }}

            /*If there are multiple modules,please add here*/
};

static SENSOR_TRIM_T s_ov8858_resolution_trim_tab[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     .trim_info =
         {
             {0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0}},
             {0, 0, 1280, 720, 13617, 720, 816, {0, 0, 1280, 720}},
#ifdef SBS_MODE_SENSOR
             {0,
              0,
              1600,
              1200,
              53590,
              1440,
              1244,
              {0, 0, 1600, 1200}}, // 25757.6ns
#endif
             {PREVIEW_TRIM_X,
              PREVIEW_TRIM_Y,
              PREVIEW_TRIM_W,
              PREVIEW_TRIM_H,
              PREVIEW_LINE_TIME,
              PREVIEW_MIPI_PER_LANE_BPS,
              PREVIEW_FRAME_LENGTH,
              {0, 0, PREVIEW_TRIM_W, PREVIEW_TRIM_H}},
#ifdef SBS_MODE_SENSOR
             {0,
              0,
              3200,
              1200,
              53590,
              1440,
              1244,
              {0, 0, 1600, 1200}}, // 25757.6ns
#endif
             {SNAPSHOT_TRIM_X,
              SNAPSHOT_TRIM_Y,
              SNAPSHOT_TRIM_W,
              SNAPSHOT_TRIM_H,
              SNAPSHOT_LINE_TIME,
              SNAPSHOT_MIPI_PER_LANE_BPS,
              SNAPSHOT_FRAME_LENGTH,
              {0, 0, SNAPSHOT_TRIM_W, SNAPSHOT_TRIM_H}},
         }}

    /*If there are multiple modules,please add here*/
};

static const SENSOR_REG_T
    s_ov8858_preview_size_video_tab[SENSOR_VIDEO_MODE_MAX][1] = {
        /*video mode 0: ?fps*/
        {{.reg_addr = 0xffff, .reg_value = 0xff}},
        /* video mode 1:?fps*/
        {{.reg_addr = 0xffff, .reg_value = 0xff}},
        /* video mode 2:?fps*/
        {{.reg_addr = 0xffff, .reg_value = 0xff}},
        /* video mode 3:?fps*/
        {{.reg_addr = 0xffff, .reg_value = 0xff}},
};

static const SENSOR_REG_T
    s_ov8858_capture_size_video_tab[SENSOR_VIDEO_MODE_MAX][1] = {
        /*video mode 0: ?fps*/
        {{.reg_addr = 0xffff, .reg_value = 0xff}},
        /* video mode 1:?fps*/
        {{.reg_addr = 0xffff, .reg_value = 0xff}},
        /* video mode 2:?fps*/
        {{.reg_addr = 0xffff, .reg_value = 0xff}},
        /* video mode 3:?fps*/
        {{.reg_addr = 0xffff, .reg_value = 0xff}},
};

static SENSOR_VIDEO_INFO_T s_ov8858_video_info[SENSOR_MODE_MAX] = {
    {{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, PNULL},
    {{{30, 30, 270, 90}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}},
     (SENSOR_REG_T **)s_ov8858_preview_size_video_tab},
    {{{2, 5, 338, 1000}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}},
     (SENSOR_REG_T **)s_ov8858_capture_size_video_tab},
};

static struct sensor_module_info s_ov8858_module_info_tab[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     .module_info = {.major_i2c_addr = I2C_SLAVE_ADDR >> 1,
                     .minor_i2c_addr = I2C_SLAVE_ADDR >> 1,

                     .reg_addr_value_bits = SENSOR_I2C_REG_16BIT |
                                            SENSOR_I2C_VAL_8BIT |
                                            SENSOR_I2C_FREQ_400,

                     .avdd_val = SENSOR_AVDD_2800MV,
                     .iovdd_val = SENSOR_AVDD_1800MV,
                     .dvdd_val = SENSOR_AVDD_1200MV,

                     .image_pattern = SENSOR_IMAGE_PATTERN_RAWRGB_B,

                     .preview_skip_num = 1,
                     .capture_skip_num = 3,
                     .flash_capture_skip_num = 6,
                     .mipi_cap_skip_num = 0,
                     .preview_deci_num = 0,
                     .video_preview_deci_num = 0,

                     .threshold_eb = 0,
                     .threshold_mode = 0,
                     .threshold_start = 0,
                     .threshold_end = 0,

                     .sensor_interface =
                         {
                             .type = SENSOR_INTERFACE_TYPE_CSI2,
                             .bus_width = 4,
                             .pixel_width = 10,
                             .is_loose = 0,
                         },
                     .change_setting_skip_num = 1,
                     .horizontal_view_angle = 35,
                     .vertical_view_angle = 35}}

    /*If there are multiple modules,please add here*/
};

static struct sensor_ic_ops s_ov8858_ops_tab;
struct sensor_raw_info *s_ov8858_mipi_raw_info_ptr = &s_ov8858_mipi_raw_info;

SENSOR_INFO_T g_ov8858_mipi_raw_info = {
    .hw_signal_polarity = SENSOR_HW_SIGNAL_PCLK_P | SENSOR_HW_SIGNAL_VSYNC_P |
                          SENSOR_HW_SIGNAL_HSYNC_P,
    .environment_mode = SENSOR_ENVIROMENT_NORMAL | SENSOR_ENVIROMENT_NIGHT,
    .image_effect = SENSOR_IMAGE_EFFECT_NORMAL |
                    SENSOR_IMAGE_EFFECT_BLACKWHITE | SENSOR_IMAGE_EFFECT_RED |
                    SENSOR_IMAGE_EFFECT_GREEN | SENSOR_IMAGE_EFFECT_BLUE |
                    SENSOR_IMAGE_EFFECT_YELLOW | SENSOR_IMAGE_EFFECT_NEGATIVE |
                    SENSOR_IMAGE_EFFECT_CANVAS,

    .wb_mode = 0,
    .step_count = 7,
    .reset_pulse_level = SENSOR_LOW_PULSE_RESET,
    .reset_pulse_width = 50,
    .power_down_level = SENSOR_LOW_LEVEL_PWDN,
    .identify_count = 1,
    .identify_code =
        {
            {.reg_addr = ov8858_PID_ADDR, .reg_value = ov8858_PID_VALUE},
            {.reg_addr = ov8858_VER_ADDR, .reg_value = ov8858_VER_VALUE},
        },

    .source_width_max = SNAPSHOT_WIDTH,
    .source_height_max = SNAPSHOT_HEIGHT,
    .name = (cmr_s8 *)SENSOR_NAME,
    .image_format = SENSOR_IMAGE_FORMAT_RAW,

    .module_info_tab = s_ov8858_module_info_tab,
    .module_info_tab_size = ARRAY_SIZE(s_ov8858_module_info_tab),

    .resolution_tab_info_ptr = s_ov8858_resolution_tab_raw,
    .sns_ops = &s_ov8858_ops_tab,
    .raw_info_ptr = &s_ov8858_mipi_raw_info_ptr,

    .video_tab_info_ptr = NULL,
    .sensor_version_info = (cmr_s8 *)"ov8858v1",
};
#endif
