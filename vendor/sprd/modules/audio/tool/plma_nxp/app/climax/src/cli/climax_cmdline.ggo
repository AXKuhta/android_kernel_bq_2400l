#
# CLI Maximus commands def for gengetopt
#
package "climax"
version "2.3"
description "Command Line Interface for MAXimus\nNXP SemiConductors Smart Amplifier: TFA98xx"

text "\n Device operation options:"
option "start"     - "device power up and start"  optional
option "stop"      - "device stop and power down" optional 
option "volume"	   v "set volume step"
			int typestr="step" optional
option "profile"    P "set the (new) profile for current operation" optional
                        string typestr="profilenr" default="0" argoptional optional multiple

# Player
text " Player options:"
option "startplayback"  - "Start playback of audio file"    optional
                          string typestr="\"file name.wav\"" optional 
option "stopplayback"   - "Stop playback if active" optional
option "audiopath"      - "Path of directory that contains the audio files (optional)"    optional
                          string typestr="\"/home/user/somedir/\"" optional 

# Generic
text " Generic options:"
option "device"		d "target name for the interface: i2c, serial, socket, i2c dummy" 
						string typestr="/dev/i2c-x|/dev/ttyUSBx|host:port|dummy" optional
option "resetMtpEx" - "reset MtpEx register to do re-calibration" optional
option "reset"    R "initialize I2C registers and set ACS. After the command, the state is same power on reset." optional
# Speaker boost
text " Speaker boost options:"
option "calibrate"  a "do calibration with loaded speaker file, --output returns updated speaker file" optional
                        string typestr="once|always" default="always" argoptional
option "calshow"    A "show calibration impedance value" optional
option "params"     p "write the params file directly to the device; depending on header type: patch, speaker, preset, config, drc, eq " 
						string typestr="parameter file name" optional multiple
option "re0"         - "set specified re0 or read the current re0"
                        optional float typestr="re0" argoptional hidden                  
option "save" s "write settings to binary file without header. the file type extension must be specified as .eq.bin, .speaker.bin, etc"  optional
                        string typestr="filename.<type>.bin"	
# diagnostics
text " Diagnostics and test options:"
option "currentprof"   - "set the currently (loaded) runing profile to force transition to new profile. This options should be used with profile option" optional
                        int typestr="profilenr"  dependon="profile"
option "versions"	V "print versions and chip rev" optional
option "register"	r "read tfa register, write if extra arg given" # e.g. -r9=1" 
						int typestr="offset[,value]" optional multiple
option "regwrite"	w "write value for register"
						int typestr="hex" optional multiple hidden
option "vstepmsg"	- "write value to select specific message inside the volumestep"
						int typestr="decimal" optional hidden default="100"
option "dump"   -   "dump all defined registers or container" optional		
					optional string typestr="cnt"  default="" argoptional
option "pin"        - "control devkit signal pin" optional hidden
						string typestr="gpio pin name"
option "wait"        - "timeout value (msec) for pinevent (0=forever)" optional hidden
						string typestr="pin event timeout"
option "diag"	-   "run all tests, or single if testnr; optional extra argument: [i2s|dsp|sb|pins]" 
						optional int typestr="testnr"  default="0" argoptional
option "xmem"      x "access (read/write) tfa xmem"
                        int typestr="offset[,value]" optional multiple
option "ymem"      - "access (read/write) tfa ymem"
                        int typestr="offset[,value]" optional multiple
option "pmem"      - "access (read/write) tfa pmem"
                        int typestr="offset[,value]" optional multiple
option "iomem"      - "access (read/write) tfa iomem"
                        int typestr="offset[,value]" optional multiple
option "speaker"	S "speaker side select: Left, Right, Both or Disable"
				string typestr="L|R|B|D" default="B" optional

# lifetime test support
text " Live data options:"
option "dumpmodel"   -   "dump current speakermodel impedance=z, excursion=x or MBDrcDynamics" optional
						optional string typestr="x|z|d[,value]"  default="z" argoptional					
option "record" -  "record speaker state info via I2C and display" 
						optional int typestr="msInterval" default="55" argoptional
option"count"  -   "number of read cycles to execute, 0 means forever"
 						optional int typestr="cycles" 
option "output" o  "specify the output file for binary speaker state info records, default=stdout"
					    optional string typestr="filename" 
option "logger" -  "start datalogger, recording <count> state info lines and binary Z/Xmodels" 
                        optional int typestr="sInterval" default="2" argoptional

# generic stuff
text " Container file handling options:"
option "ini2cnt"      -  "Generate the container file from an ini file <this>.ini to <this>.cnt"  optional 
                        string typestr="filename.ini"
option "bin2hdr"      -  "Generate a file with header from input binary file.<type> [customer] [application] [type]. Original file is backed up as file.<type>.old file"  optional 
                        string typestr="file.<type>"
option "tfa"  	      - "provide the tfa device type"  optional 
                        int typestr="tfa_type" default="1"
# generic stuff
text " Generic options:"
option "load"       l "read parameter settings from container file" optional
                        string typestr="filename.cnt"
option "splitparms" - "save parameters of the loaded container file to seperate parameter files"      
                        argoptional string typestr="foldername" optional dependon="load"                
option "msgblob"    - "save all relevant DSP messages from the loaded container file to a single binary"      
                        argoptional string typestr="filename"               
option "server"	    - "run as server (for Linux only, default=`9887')" optional
                        string typestr="port" default="9887" argoptional
option "client"	    - "run as client (for Linux only, default=`9887')" optional
                        string typestr="port" default="9887" argoptional
option "slave"      - "override hardcoded I2C slave address"  optional int typestr="i2c address"
option "loop"       L "loop the operation [0=forever]" int  typestr="count"  optional
option "verbose"    b "Enable verbose (mask=timing|i2cserver|socket|scribo)"   int  typestr="mask" default="2" optional argoptional
option "monitor"    m "Show interpreted I2C writes via dummy"  int  optional argoptional
option "trace"      t "Enable I2C transaction tracing to stdout/file"    optional
                     string typestr="filename" argoptional
option "rpc"        - "Enable DSP communication while the audio processing is running"  optional

# For detailed gengetopt information see http://www.gnu.org/software/gengetopt/gengetopt.html
